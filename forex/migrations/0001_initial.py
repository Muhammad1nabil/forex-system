# Generated by Django 2.2.20 on 2021-08-20 20:47

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date/Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update Date/Time')),
                ('account_id', models.CharField(blank=True, editable=False, max_length=50, null=True, verbose_name='Account ID')),
                ('first_name', models.CharField(max_length=50, verbose_name='First Name')),
                ('mid_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Middle Name')),
                ('last_name', models.CharField(max_length=50, verbose_name='Last Name')),
                ('date_of_birth', models.DateField(blank=True, null=True, verbose_name='Date of Birth')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('national_id', models.ImageField(upload_to='nationalIDs', verbose_name='National ID')),
                ('mobile', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None, verbose_name='Mobile Number')),
                ('address', models.CharField(blank=True, max_length=250, null=True, verbose_name='Address')),
                ('date_of_investment', models.DateField(verbose_name='Date of Investment')),
                ('vod_cash_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, verbose_name='Vodafone Cash Mobile Number')),
                ('last_contacted', models.DateTimeField(blank=True, null=True, verbose_name='Last Contact')),
                ('comment', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AccountType',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date/Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update Date/Time')),
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Name')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date/Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update Date/Time')),
                ('main_wallet', models.FloatField(default=0, verbose_name='Main Wallet')),
                ('balance', models.FloatField(default=0, verbose_name='Current Balance')),
                ('trading_result_last_week', models.FloatField(default=0, editable=False, verbose_name='Trading Result Last Week')),
                ('PL', models.FloatField(default=0, verbose_name='Profit/Loss')),
                ('total_achievement', models.FloatField(default=0, editable=False, verbose_name='Total Achievement')),
                ('share', models.FloatField(default=0, verbose_name='Share Percentage')),
                ('profit_per', models.FloatField(default=0, verbose_name='Profit Percentage')),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='forex.Account', verbose_name='Account')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Bundle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date/Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update Date/Time')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Name')),
                ('min_value', models.PositiveSmallIntegerField(verbose_name='Minimum Value')),
                ('max_value', models.PositiveSmallIntegerField(verbose_name='Maximum Value')),
                ('bundle_per', models.FloatField(verbose_name='Bundle Percentage %')),
                ('referral_per', models.FloatField(verbose_name='Referral Percentage %')),
                ('referral_breakeven_lvl', models.FloatField(verbose_name='Referral Breakeven Level %')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TotalAsset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date/Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update Date/Time')),
                ('total', models.FloatField(verbose_name='Total Trading Amount')),
                ('PLs', models.FloatField(default=0, editable=False, verbose_name='Last Week P/L')),
                ('deposits', models.FloatField(default=0, editable=False, verbose_name='Total Deposits')),
                ('withdrawals', models.FloatField(default=0, editable=False, verbose_name='Total Withdrawals')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TransactionChannel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date/Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update Date/Time')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Name')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date/Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update Date/Time')),
                ('transaction_type', models.CharField(choices=[('Deposit', 'Deposit'), ('Withdrawal', 'Withdrawal')], max_length=10, verbose_name='Transaction Type')),
                ('amount_EGP', models.FloatField(blank=True, null=True, verbose_name='Amount (EGP)')),
                ('amount_USD', models.FloatField(blank=True, null=True, verbose_name=' Amount (USD)')),
                ('deliverd_rate', models.FloatField(help_text='EGP/USD', verbose_name='Delivered Rate')),
                ('real_rate', models.FloatField(help_text='EGP/USD', verbose_name='Real Rate')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Transaction Date')),
                ('paid', models.BooleanField(default=False, verbose_name='Paid')),
                ('paid_flag', models.BooleanField(default=False, editable=False, verbose_name='paid_flag')),
                ('balance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forex.Balance', verbose_name='Balance')),
                ('transaction_channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forex.TransactionChannel', verbose_name='Transaction Type')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FinanceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date/Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update Date/Time')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('type', models.CharField(choices=[('Revenues', 'Revenues'), ('Expenses', 'Expenses')], max_length=50, verbose_name='Type')),
            ],
            options={
                'unique_together': {('name', 'type')},
            },
        ),
        migrations.CreateModel(
            name='CompanyFinance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date/Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Update Date/Time')),
                ('amount', models.FloatField(verbose_name='Amount USD')),
                ('finance_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forex.FinanceType', verbose_name='Finance Type')),
            ],
            options={
                'ordering': ['-created_at', '-updated_at'],
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='account',
            name='account_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='forex.AccountType', verbose_name='Account Type'),
        ),
        migrations.AddField(
            model_name='account',
            name='bundle',
            field=models.ForeignKey(blank=True, max_length=50, null=True, on_delete=django.db.models.deletion.CASCADE, to='forex.Bundle', verbose_name='Bundle'),
        ),
    ]
